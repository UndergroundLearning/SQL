Zestaw 1
Zad_1. Utworzyć 3 tabele, dobrać odpowiednie powiązania między nimi i utworzyć klucze główne. klasa(id_klasy, wychowawca, nazwa) rodzice(pesel, imie, nazwisko, adres, telefon1, telefon2, telefon3, mail, miejsce_pracy) uczniowie(nr_legitymacji, imie, nazwisko, rodzic, data_urodzenia, data_rozp_nauki) CREATE TABLE klasa ( id_klasy number(2) constraint kl_pk primary key, wychowawca varchar2(30), nazwa char(2) ); CREATE TABLE rodzice ( pesel number(11) constraint rodz_pk primary key, imie varchar2(20), nazwisko varchar2(30), adres varchar2(50), telefon1 varchar2(15), telefon2 varchar2(15), telefon3 varchar2(15), mail varchar2(30), miejsce_pracy varchar2(50) ); CREATE TABLE uczniowie ( nr_legitymacji number(5) constraint ucz_pk primary key, imie varchar2(20), nazwisko varchar2(30), rodzic number(11) constraint ucz_fk references rodzice(pesel), data_urodzenia date, data_rozp_nauki date );
Zad_2. Dodać do tabeli uczniowie kolumnę klasa, która utworzy powiązanie z tabelą klasa. ALTER TABLE uczniowie ADD (klasa number(2) constraint ucz_kl_fk references klasa(id_klasy)); Zad_3. Przenieść do tabeli prac_archiw wszystkich praktykantów z tabeli pracownicy. INSERT INTO prac_archiw SELECT * FROM pracownicy WHERE stanowisko LIKE 'PRAKTYKANT'; Zad_4. Utworzyć perspektywę budzet_dzialu z identyfikatorem i nazwą działu oraz całym jego budżetem. Czy perspektywę można modyfikować, uzasadnij. CREATE OR REPLACE VIEW budzet_dzialu AS SELECT d.id_dzialu, d.nazwa, sum(nvl(placa,0)+nvl(dod_funkcyjny,0)+nvl(prowizja,0))*12 budzet FROM pracownicy p JOIN dzialy d ON (p.id_dzialu=d.id_dzialu) GROUP BY d.id_dzialu, d.nazwa; Nie można modyfikować bo występuje grupowanie i złączenie tabel. Zad_5. Jakie polecenie wyświetli nazwy ograniczeń dla tabel pracownicy, stanowiska i działy? SELECT * FORM user_constraints WHERE table_name IN ('PRACOWNICY', 'STANOWISKA', 'DZIALY');

Zestaw 2
Zadanie 1 Utworzyć tabele: lekarze (id_lekarza, imie, nazwisko, specjalizacja, tel1, tel2, tel3), pacjenci (pesel, data_rejestracji, ubezpieczenie, notatka), rejestracja (nr_rejestracji, pacjent, lekarz)
1.create table lekarze ( id_lekarza NUMBER(3) constraint lek_pk primary key, imie varchar2(20) constraints imie_nn not null, nazwisko varchar2(40) constraints nazwisko_nn not null, specjalizacja varchar2(20), telefon_1 varchar2(15), telefon_2 varchar2(15), telefon_3 varchar2(15) ); create table pacjeci ( pesel NUMBER(11)constraint pesel_pk primary key, notatka varchar2(500), data_rejest date default sysdate, ubezpieczenie varchar2(100) not null ); create table rejestracja ( nr_rejestr NUMBER(7) constraint nr_rejestr_pk primary key, pacjent NUMBER(11) constraint pacjent_fk references pacjeci(pesel), lekarz NUMBER(3) constraint lekarz_fk references lekarze(id_lekarza) );
Zadanie 2 Tabeli lekarze nadaj ograniczenie tak aby pole specjalizacja nie moglo byc puste.
2. alter table lekarze modify specjalizacja not null;
Zadanie 3 Zmniejszyc prowizje o 1000 pracownikom którzy dostali prowizje,zwrócic uwage aby prowizja nie była ujemna ...(nie wiem czy dobra jest tresc zadania)
update pracownicy set prowizja= prowizja-1000 where prowizja >= 1000;
Zadanie 4 Utworzyc perspektywe tylko z tymi pracownikami którzy w danym zespole byli zatrudnieni jako pierwsi. Czy mozna je modyfikowac ?
4. create view pracownicy_zespoly as select nazwisko, nazwa, data_zatr from pracownicy p join dzialy d on p.id_dzialu=d.id_dzialu where data_zatr = (select min(data_zatr) from pracownicy where p.id_dzialu=id_dzialu); mozna modyfikowac te perspektywe
Zadanie 5 Wyświetl sekwencje
5. select * from user_sequences;

Zestaw 3
1.
create table budynki ( id_budynku number(3) primary key, l_pieter number(2), l_lokali number(3), l_klatek number(2) ); create table mieszkania ( id_mieszkania number(3) primary key, adres varchar2(30), budynek number(3) constraint bud_fk references budynki(id_budynku), nr_mieszkania number(3), kategoria varchar2(20) ); create table mieszkancy ( pesel number(11) primary key, imie varchar2(20) not null, nazwisko varchar2(30) not null, mieszkanie number(3) constraint miesz_fk references mieszkania(id_mieszkania) ); 2. zmienić strukturę pola kategoria tak aby można wpisać tylko WLASNOSCIOWE, LOKATORSKIE, SPOLDZIELCZE.
alter table mieszkania add constraint kat_ch check (kategoria in ('WLASNOSCIOWE' ,'LOKATORSKIE'.'SPOLDZIELCZE')); 3. wprowadz zmiany w tabeli pracownicy. Usuń laborantów.
DELETE FROM pracownicy where stanowisko like 'LABORANT'; 4. utwórz perspektywe place_zaspolu z polami nazwa , placa minimalna, placa maksymalna i srednia placa. Czy w tej perspektywie można zmienić dane? create view place_zespolu as select nazwa, min(placa),max(placa), avg(placa) from pracownicy natural join dzialy group by nazwa; W tej perspektywie nie mozna modyfikowac danych poniewaz wystepuje grupowanie... 5. jakim zapytaniem wyświetlimy informacje o nazwie indeksów w tabelach stanowiska, dzialy, pracownicy. SELECT * FROM user_indexes where table_name in ('stanowiska','dzialy','pracownicy');

Zestaw 4
1.Utworzyć tabele , uwzględniając klucze główne i powiązania miedzy tabelami. CREATE TABLE LOTNISKA ( id_lotniska numeric(2), nazwa varchar(20), miejscowosc varchar(20), panstwo varchar(20), CONSTRAINT lotniska_pk PRIMARY KEY (id_lotniska) ); CREATE TABLE LOTY ( id_lotu numeric(2), skad numeric(2), dokad numeric(2), data_lotu date, ilosc_miejsc numeric(3), samolot varchar(20), CONSTRAINT loty_pk PRIMARY KEY (id_lotu), CONSTRAINT loty_skad_fk FOREIGN KEY (skad) REFERENCES lotniska (id_lotniska), CONSTRAINT loty_dokad_fk FOREIGN KEY (dokad) REFERENCES lotniska (id_lotniska) ); CREATE TABLE BILETY ( id_biletu numeric(2), lot numeric(2), cena numeric(10,2), status varchar(20), CONSTRAINT bilety_pk PRIMARY KEY (id_biletu), CONSTRAINT bilety_lot_fk FOREIGN KEY (lot) REFERENCES LOTY (id_lotu) ); 2. wprowadź zmianę w tabeli bilety tak by pole status mogło przyjmować jedynie wartości zarezerwowany wolny sprzedany
ALTER TABLE BILETY ADD CONSTRAINT BILETY_ST_CH CHECK (STATUS IN ('zarezerwowany', 'wolny', 'sprzedany'));
3. dokonaj zmiany w tabeli pracownicy podwyższ dodatek funkcyjny o 500zł wszystkim pracownikom
update pracownicy SET dod_funkcyjny = nvl(dod_funkcyjny, 0) + 500; 4. utwórz perspektywe "place_stanowisk" zawierajaca nazwę stanowiska minimalną i maksymalną place dla niego. czy można modyfikować dane tej perspektywy wyjaśnij dlaczego
CREATE OR REPLACE VIEW PLACE_STANOWISK AS SELECT STANOWISKO,
MAX(PLACA) AS MAKSIMUM, MIN(PLACA) AS MINIMUM FROM PRACOWNICY GROUP BY STANOWISKO; Tej perspektywy nie można edytować gdyż kolumny max i min. używają grupowania i nie mają odpowiedników w tabeli pracownicy. 5 .wykonując jakie zapytanie można uzyskać informacje o nazwach kolumn perspektyw, które są modyfikowane 5. SELECT * FROM USER_UPDATABLE_COLUMNS